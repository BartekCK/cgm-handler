name: Build and deploy

on:
  push:
    branches: [ "develop", "master" ] #TODO: Change in to relase
  pull_request:
    branches: [ "develop", "master" ]

jobs:

  deploy:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ECR_REPOSITORY_NAME: cgm-handler-repository

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Set COMMIT_HASH environment variable
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and push image to ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_DEFAULT_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com
          docker build -t cgm-handler:$COMMIT_HASH .
          docker tag cgm-handler:$COMMIT_HASH ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com/cgm-handler-repository:$COMMIT_HASH
          docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com/cgm-handler-repository:$COMMIT_HASH

      - name: Run all migrations on production database
        env:
          DEXCOM_USERNAME: ${{ secrets.DEXCOM_USERNAME }}
          DEXCOM_PASSWORD: ${{ secrets.DEXCOM_PASSWORD }}
          DEXCOM_APPLICATION_ID: d89443d2-327c-4a6f-89e5-496bbb0317db
          DEXCOM_USER_LOCATION: EU
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
          DATABASE_USER: ${{ secrets.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
        run: |
          npm ci
          npm run migrations:latest
    
