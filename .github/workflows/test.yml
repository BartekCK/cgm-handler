name: App testing

on:
  push:
    branches: [ "develop", "master" ]
  pull_request:
    branches: [ "develop", "master" ]

jobs:

  test:
    services:
      postgres:
        image: postgres
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: user123
          POSTGRES_PASSWORD: root
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install all dependencies
        run: npm ci

      - name: Check typescript types
        run: npm run check-types

      - name: Check lint
        run: npm run lint

      - name: Run test
        run: npm test

      - name: Upload coverage reports
        run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov

      - name: Install aws-lambda-runtime-interface-emulator
        run: |
          mkdir -p ~/.aws-lambda-rie && curl -Lo ~/.aws-lambda-rie/aws-lambda-rie https://github.com/aws/aws-lambda-runtime-interface-emulator/releases/latest/download/aws-lambda-rie && chmod +x ~/.aws-lambda-rie/aws-lambda-rie

      - name: Set COMMIT_HASH environment variable
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV


      - name: Build Docker image
        run: |
          echo "Building image with tag: $COMMIT_HASH"
          docker build -t cgm-handler:$COMMIT_HASH .

      - name: Run cgm-handler-container
        env:
          DEXCOM_USERNAME: ${{ secrets.DEXCOM_USERNAME }}
          DEXCOM_PASSWORD: ${{ secrets.DEXCOM_PASSWORD }}
          DEXCOM_APPLICATION_ID: d89443d2-327c-4a6f-89e5-496bbb0317db
          DEXCOM_USER_LOCATION: EU
          DATABASE_HOST: postgres
          DATABASE_PORT: 5432
          DATABASE_USER: user123
          DATABASE_PASSWORD: root
          DATABASE_NAME: test
        run: |
          echo "Trigger all migrations"
          npm run migrations:latest
          echo "Running image with tag: $COMMIT_HASH"
          docker run --rm -d -p 9000:8080 \
          --name cgm-handler-container \
          -e DEXCOM_USERNAME \
          -e DEXCOM_PASSWORD \
          -e DEXCOM_APPLICATION_ID \
          -e DEXCOM_USER_LOCATION \
          -e DATABASE_HOST \
          -e DATABASE_PORT \
          -e DATABASE_USER \
          -e DATABASE_PASSWORD \
          -e DATABASE_NAME \
          cgm-handler:$COMMIT_HASH

      - name: Check if image is appropriate for Lambda Container
        run: |
          curl -XPOST "http://localhost:9000/2015-03-31/functions/function/invocations" -d '{}'

      - name: Clear after pipeline
        run: |
          docker container stop cgm-handler-container
