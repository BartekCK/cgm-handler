name: App testing

on:
  push:
    branches: [ "develop", "master" ]
  pull_request:
    branches: [ "develop", "master" ]

jobs:
  test:

    #    services:
    #      postgres:
    #        image: postgres
    #        ports:
    #          - "5432:5432"
    #        env:
    #          POSTGRES_USER: user123
    #          POSTGRES_PASSWORD: root
    #          POSTGRES_DB: test
    #        options: >-
    #          --health-cmd pg_isready
    #          --health-interval 10s
    #          --health-timeout 5s
    #          --health-retries 5

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      #    - name: Install all dependencies
      #      run: npm ci
      #
      #    - name: Check typescript types
      #      run: npm run check-types
      #
      #    - name: Check lint
      #      run: npm run lint
      #
      #    - name: Run test
      #      run: npm test


      - name: Install aws-lambda-runtime-interface-emulator
        run: |
          mkdir -p ~/.aws-lambda-rie && curl -Lo ~/.aws-lambda-rie/aws-lambda-rie https://github.com/aws/aws-lambda-runtime-interface-emulator/releases/latest/download/aws-lambda-rie && chmod +x ~/.aws-lambda-rie/aws-lambda-rie

      - name: Set environment variable
#        run: echo "COMMIT_HASH=$(git rev-parse HEAD)" >> $GITHUB_ENV
        run: |
          echo "COMMIT_HASH=${GITHUB_SHA}" >> $GITHUB_ENV
          echo ${GITHUB_SHA}
          
          

      - name: Build Docker image
        run: |
          echo "Building image with tag: $GITHUB_ENV"
          echo "Building image with tag: ${COMMIT_HASH}"
          echo "Building image with tag: ${SH_COMMIT_HASH}"
          IMAGE_TAG=${{ steps.get_commit_hash.outputs.commit_hash }}
          echo "Building image with tag: $IMAGE_TAG"
        
          docker build -t cgm-handler:$IMAGE_TAG .

      - name: Run container
        run: |
          IMAGE_TAG=${{ steps.get_commit_hash.outputs.commit_hash }}
          echo "Running container from image with tag: $IMAGE_TAG"
          docker run --rm -it -p 9000:8080 cgm-handler:$IMAGE_TAG
